{"version":3,"sources":["contexts/CurrentUserContext.js","components/Card.jsx","images/logo.svg","components/Header.jsx","components/Footer.jsx","components/Main.jsx","components/PopupWithForm.jsx","components/EditProfilePopup.jsx","components/AddPlacePopup.jsx","components/EditAvatarPopup.jsx","components/ImagePopup.jsx","components/Login.jsx","images/signup-modal-result-fail.svg","images/signup-modal-result-success.svg","components/InfoTooltip.jsx","components/Register.jsx","components/ProtectedRoute.jsx","utils/Api.js","utils/auth.js","components/App.jsx","index.js"],"names":["CurrentUserContext","React","createContext","Card","memo","props","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","className","src","link","alt","name","onClick","onCardClick","type","aria-label","onCardLike","length","onCardDelete","Header","headerLink","page","to","userData","email","handleSignOut","logo","Footer","Main","onEditAvatar","avatar","onEditProfile","about","onAddPlace","cards","map","item","key","PopupWithForm","isOpen","title","action","method","onSubmit","children","submitButtonState","onClose","EditProfilePopup","useState","setName","description","setDescription","useEffect","e","preventDefault","onUpdateUser","id","placeholder","required","minLength","maxLength","autoComplete","value","onChange","target","AddPlacePopup","placeName","setPlaceName","placeLink","setPlaceLink","EditAvatarPopup","inputRef","useRef","onUpdateAvatar","current","ref","ImagePopup","Login","password","setUserData","handleInputChange","handleLogin","InfoTooltip","resultText","resultImg","signupResult","resultSuccess","resultFail","Register","handleSignup","isSignupModalOpen","ProtectedRoute","Component","component","loggedIn","api","url","headers","this","_url","_headers","res","ok","json","Promise","reject","status","statusText","fetch","then","_checkErrors","info","body","JSON","stringify","avatarUrl","cardId","authorization","BASE_URL","resCheck","App","setCurrentUser","setLoggedIn","isEditProfilePopupOpen","setIsEditProfilePopupOpen","editSubmitButtonState","seteditSubmitButtonState","isImagePopupOpen","setIsImagePopupOpen","selectedCard","setSelectedCard","setCards","isAddPlacePopupOpen","setIsAddPlacePopupOpen","addCardSubmitButtonState","setAddCardSubmitButtonState","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","avatarUpdateSubmitButtonState","setAvatarUpdateSubmitButtonState","closeAllPopups","history","useHistory","setIsSignupModalOpen","setSignupResult","tokenCheck","token","jwt","localStorage","getItem","push","catch","err","console","error","all","getProfileInfo","getCards","userInfo","initialCards","Provider","exact","path","auth","setItem","changeLikeCardStatus","newCard","newCards","c","removeCard","filter","removeItem","data","editProfile","finally","addCard","updateAvatar","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.1803866d.chunk.js","sourcesContent":["import React from 'react';\n// import profilePhoto from '../images/profile-photo.jpg';\n\nexport const CurrentUserContext = React.createContext()","import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\n\nconst Card = React.memo((props) => {\n  const currentUser = React.useContext(CurrentUserContext);\n  const isOwn = props.card.owner._id === currentUser._id;\n  const cardDeleteButtonClassName = `photo-elements__delete-button ${!isOwn && 'photo-elements__delete-button_hidden'}`;\n\n  const isLiked = props.card.likes.some((i) => i._id === currentUser._id);\n  const cardLikeButtonClassName = `photo-elements__like-button ${isLiked && 'photo-elements__like-button_active'}`;\n\n  const handleCardClick = () => {\n    props.onCardClick(props.card);\n  };\n\n  return (\n    <li className='photo-elements__item'>\n      <img\n        className='photo-elements__image'\n        src={props.card.link}\n        alt={props.card.name}\n        onClick={handleCardClick}\n      />\n\n      <div className='photo-elements__caption'>\n        <h2 className='photo-elements__text'>{props.card.name}</h2>\n        <div className='photo-elements__like-container'>\n          <button\n            className={cardLikeButtonClassName}\n            type='button'\n            aria-label='Нравится'\n            onClick={()=> {\n              props.onCardLike(props.card)\n            }}\n          ></button>\n          <p className='photo-elements__like-counter'>\n            {props.card.likes.length}\n          </p>\n        </div>\n        <button\n          className={cardDeleteButtonClassName}\n          type='button'\n          aria-label='Удалить'\n          onClick={() => {\n            props.onCardDelete(props.card)\n          }}\n        ></button>\n      </div>\n    </li>\n  );\n});\n\nexport default Card;\n","export default __webpack_public_path__ + \"static/media/logo.a307e1c4.svg\";","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport logo from '../images/logo.svg';\n\nconst Header = (props) => {\n  let headerLink;\n\n  if (props.page === 'signin') {\n    headerLink = <NavLink to='/signup' className='header__link'>Регистрация</NavLink>\n  } else if (props.page === 'signup') {\n    headerLink = <NavLink to='/signin' className='header__link'>Войти</NavLink>\n  } else if (props.page === 'feed') {\n    headerLink = \n    <nav className='header__nav'>\n      <p className=\"header__info\">{props.userData.email}</p>\n      <NavLink to='/login' className='header__link header__link_signout' onClick={props.handleSignOut}>Выйти</NavLink>\n    </nav>\n  }\n\n  return (\n    <header className='header'>\n      <img src={logo} alt='логотип место' className='header__logo' />\n      {headerLink}\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Footer = (props) => {\n  return (\n    <footer className='footer'>\n      <p className='footer__copyright'>&copy; 2020 Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;","import React, { useContext } from 'react';\nimport Card from './Card.jsx';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport Header from './Header.jsx';\nimport Footer from './Footer.jsx';\n\nconst Main = (props) => {\n  const currentUser = useContext(CurrentUserContext);\n\n  return (\n    <>\n      <Header page='feed' handleSignOut={props.handleSignOut} userData={props.userData} />\n      <main className='main'>\n        <section className='profile'>\n          <div className='profile__photo-container' onClick={props.onEditAvatar}>\n            <img src={currentUser.avatar} alt='фото профиля' className='profile__photo' />\n          </div>\n\n          <div className='profile__info'>\n            <div className='profile__title'>\n              <h1 className='profile__name'>{currentUser.name}</h1>\n              <button\n                className='profile__edit-button'\n                type='button'\n                aria-label='Редактировать'\n                onClick={props.onEditProfile}\n              ></button>\n            </div>\n\n            <p className='profile__description'>{currentUser.about}</p>\n          </div>\n\n          <button\n            className='profile__add-button'\n            type='button'\n            aria-label='Добавить'\n            onClick={props.onAddPlace}\n          ></button>\n        </section>\n\n        <section className='photo-elements'>\n          <ul className='photo-elements__list'>\n            {props.cards.map((item) => {\n              return (\n                <Card\n                  card={item}\n                  key={item._id}\n                  onCardClick={props.onCardClick}\n                  onCardLike={props.onCardLike}\n                  onCardDelete={props.onCardDelete}\n                />\n              );\n            })}\n          </ul>\n        </section>\n      </main>\n      <Footer />\n    </>\n  );\n};\n\nexport default Main;\n","import React from 'react';\n\nconst PopupWithForm = (props) => {\n  return (\n    <div className={`modal ${props.name} ${props.isOpen ? 'modal_opened' : ''}`}>\n      <div className='modal__container'>\n        <h2 className='modal__title'>{props.title}</h2>\n\n        <form\n          action='#'\n          name={`form-${props.name}`}\n          className='modal__form'\n          method='POST'\n          onSubmit={props.onSubmit}\n        >\n          {props.children}\n          <button type='submit' className='modal__button'>\n            {props.submitButtonState}\n          </button>\n        </form>\n\n        <button\n          className='modal__close-button'\n          type='button'\n          aria-label='Закрыть'\n          onClick={props.onClose}\n        ></button>\n      </div>\n    </div>\n  );\n}\n\nexport default PopupWithForm;","import React, { useState, useEffect, useContext } from 'react';\nimport PopupWithForm from './PopupWithForm.jsx';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\n\nconst EditProfilePopup = (props) => {\n  const currentUser = useContext(CurrentUserContext);\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleDescriptionChange = (e) => {\n    setDescription(e.target.value);\n  };\n\n  const handleEditSubmit = (e) => {\n    e.preventDefault();\n    \n    props.onUpdateUser({\n      name,\n      about: description,\n    });\n  };\n  \n  useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser, props.isOpen]);\n  \n  return (\n    <PopupWithForm\n      name='edit-modal'\n      title='Редактировать профиль'\n      submitButtonState={props.submitButtonState}\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleEditSubmit}\n      children={\n        <>\n          <input\n            type='text'\n            name='profile-name'\n            id='profile-name-input'\n            placeholder='Ваше имя'\n            className='modal__input'\n            required\n            minLength='2'\n            maxLength='40'\n            autoComplete='off'\n            value={name}\n            onChange={handleNameChange}\n          />\n          <p className='modal__input-error-message' id='profile-name-error'></p>\n          <input\n            type='text'\n            name='profile-job'\n            id='profile-job-input'\n            placeholder='Ваша профессия'\n            className='modal__input'\n            required\n            minLength='2'\n            maxLength='200'\n            autoComplete='off'\n            value={description}\n            onChange={handleDescriptionChange}\n          />\n          <p className='modal__input-error-message' id='profile-job-error'></p>\n        </>\n      }\n    />\n  );\n};\nexport default EditProfilePopup;\n","import React, { useState } from 'react';\nimport PopupWithForm from './PopupWithForm.jsx';\n\nconst AddPlacePopup = (props) => {\n  const [placeName, setPlaceName] = useState('');\n  const [placeLink, setPlaceLink] = useState('');\n\n  const handleAddPlaceSubmit = (e) => {\n    e.preventDefault();\n\n    props.onAddPlace({\n      name: placeName,\n      link: placeLink,\n    });\n\n    setPlaceName('');\n    setPlaceLink('');\n  };\n\n  const handlePlaceNameInput = (e) => {\n    setPlaceName(e.target.value);\n  };\n  const handlePlaceLinkInput = (e) => {\n    setPlaceLink(e.target.value);\n  };\n\n  return (\n    <PopupWithForm\n      name='add-modal'\n      title='Новое место'\n      submitButtonState={props.submitButtonState}\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleAddPlaceSubmit}\n      children={\n        <>\n          <input\n            type='text'\n            name='place-name'\n            id='place-name-input'\n            placeholder='Название'\n            className='modal__input'\n            required\n            minLength='1'\n            maxLength='30'\n            autoComplete='off'\n            value={placeName}\n            onChange={handlePlaceNameInput}\n          />\n          <p className='modal__input-error-message' id='place-name-error'></p>\n\n          <input\n            type='url'\n            name='place-link'\n            id='place-link-input'\n            placeholder='Ссылка на картинку'\n            className='modal__input'\n            required\n            value={placeLink}\n            onChange={handlePlaceLinkInput}\n          />\n          <p className='modal__input-error-message' id='place-link-error'></p>\n        </>\n      }\n    />\n  );\n};\n\nexport default AddPlacePopup;\n","import React, { useRef } from 'react';\nimport PopupWithForm from './PopupWithForm.jsx'\n\nconst EditAvatarPopup = (props) => {\n  const inputRef = useRef();\n  const handleAvatarUpdateSubmit = (e) => {\n    e.preventDefault();\n\n    props.onUpdateAvatar(inputRef.current.value);\n    inputRef.current.value = '';\n  }\n\n  return (\n    <PopupWithForm\n        name='avatar-update-modal'\n        title='Обновить аватар'\n        submitButtonState={props.submitButtonState}\n        isOpen={props.isOpen}\n        onClose={props.onClose}\n        onSubmit={handleAvatarUpdateSubmit}\n        children={\n          <>\n            <input\n              ref={inputRef}\n              type='url'\n              name='avatar-link'\n              id='avatar-link-input'\n              placeholder='Ссылка на картинку'\n              className='modal__input'\n              required\n            />\n            <p\n              className='modal__input-error-message'\n              id='avatar-link-error'\n            ></p>\n          </>\n        }\n      />\n  )\n}\n\nexport default EditAvatarPopup;","import React from 'react';\n\nconst ImagePopup = (props) => {\n  return (\n    <>\n      <div\n        className={`${props.name} ${props.isOpen ? 'pic-modal_opened' : ''}`}\n      >\n        <div className='pic-modal__container'>\n          <figure className='pic-modal__picture'>\n            <img\n              src={props.card.link}\n              alt={props.card.name}\n              className='pic-modal__image'\n            />\n            <figcaption className='pic-modal__caption'>\n              {props.card.name}\n            </figcaption>\n          </figure>\n\n          <button\n            className='pic-modal__close-button'\n            type='button'\n            aria-label='Закрыть'\n            onClick={props.onClose}\n          ></button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ImagePopup;\n","import React, { useState } from 'react';\nimport Header from './Header.jsx';\n\nconst Login = (props) => {\n  const [userData, setUserData] = useState({\n    email: '',\n    password: '',\n  });\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setUserData({\n      ...userData,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { email, password } = userData;\n    props.handleLogin(email, password);\n  };\n\n  return (\n    <>\n      <Header page='signin' />\n      <div className='login'>\n        <div className='login__containter'>\n          <h1 className='login__title'>Вход</h1>\n          <form onSubmit={handleSubmit}>\n            <input\n              type='email'\n              name='email'\n              className='login__input'\n              placeholder='Email'\n              value={userData.email}\n              onChange={handleInputChange}\n            />\n            <input\n              type='password'\n              name='password'\n              className='login__input'\n              placeholder='Пароль'\n              value={userData.password}\n              onChange={handleInputChange}\n            />\n            <div className='login__button-containter'>\n              <button type='submit' className='login__button'>\n                Войти\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","export default __webpack_public_path__ + \"static/media/signup-modal-result-fail.df8eddf6.svg\";","export default __webpack_public_path__ + \"static/media/signup-modal-result-success.1b6082f8.svg\";","import React from 'react';\nimport resultFail from '../images/signup-modal-result-fail.svg';\nimport resultSuccess from '../images/signup-modal-result-success.svg';\n\nconst InfoTooltip = (props) => {\n  let resultText;\n  let resultImg;\n\n  if (props.signupResult === true) {\n    resultText = 'Вы успешно зарегистрировались!';\n    resultImg = resultSuccess;\n  } else {\n    resultText = 'Что-то пошло не так! Попробуйте ещё раз.';\n    resultImg = resultFail;\n  }\n  return (\n    <div className={`signup-modal ${props.isOpen ? 'signup-modal_opened' : ''}`}>\n      <div className='signup-modal__container'>\n        <img src={resultImg} alt='картинка результата' className='signup-modal__img' />\n        <p className='signup-modal__text'>{resultText}</p>\n        <button className='signup-modal__close-button' onClick={props.onClose} />\n      </div>\n    </div>\n  );\n};\n\nexport default InfoTooltip;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from './Header.jsx';\nimport InfoTooltip from './InfoTooltip.jsx';\n\nconst Register = (props) => {\n  const [userData, setUserData] = useState({\n    email: '',\n    password: '',\n  });\n\n  \n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setUserData({\n      ...userData,\n      [name]: value,\n    });\n  };\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    const { email, password } = userData;\n    props.handleSignup(email, password);\n  };  \n\n  return (\n    <>\n      <Header page='signup' />\n      <div className='login'>\n        <div className='login__containter'>\n          <h1 className='login__title'>Регистрация</h1>\n          <form onSubmit={handleSubmit} className='login__form'>\n            <input\n              id='email'\n              name='email'\n              type='email'\n              className='login__input'\n              placeholder='Email'\n              value={userData.email}\n              onChange={handleInputChange}\n            />\n            <input\n              id='password'\n              name='password'\n              type='password'\n              className='login__input'\n              placeholder='Пароль'\n              value={userData.password}\n              onChange={handleInputChange}\n            />\n\n            <button type='submit' className='login__button'>\n              Зарегистрироваться\n            </button>\n          </form>\n        </div>\n\n        <div className='login__button-containter'>\n          <div className='login__button-caption'>\n            <span>Уже зарегистрированы?</span>\n            <Link to='/signin' className='login__link'>\n              Войти\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      <InfoTooltip signupResult={props.signupResult} isOpen={props.isSignupModalOpen} onClose={props.onClose} />\n    </>\n  );\n};\n\nexport default Register;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst ProtectedRoute = ({ component: Component, ...props }) => {\n  return (\n    <>\n      <Route>\n        {() =>\n          props.loggedIn ? <Component {...props} /> : <Redirect to='/login' />\n        }\n      </Route>\n    </>\n  );\n};\n\nexport default ProtectedRoute;\n","class Api {\n  constructor({ url, headers }) {\n    this._url = url;\n    this._headers = headers;\n  }\n  /**\n   * checking on errors: if a fetch is ok, returns json, if not shows an error\n   */\n  _checkErrors(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(\n        `Something is wrong: 4 8 15 16 23 42 && ${res.status} ${res.statusText}`\n      );\n    }\n  }\n  /**\n   * @description getting profile info from the server\n   */\n  getProfileInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: 'GET',\n      headers: this._headers,\n    }).then(this._checkErrors);\n  }\n  /**\n   * getting cards from the server\n   */\n  getCards() {\n    return fetch(`${this._url}/cards`, {\n      method: 'GET',\n      headers: this._headers,\n    }).then(this._checkErrors);\n  }\n  /**\n   * editing user profile info on the server\n   */\n  editProfile(info) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: info.name,\n        about: info.about,\n      }),\n    }).then(this._checkErrors);\n  }\n  /**\n   * updating profile avatar on the server\n   */\n  updateAvatar(avatarUrl) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatarUrl,\n      }),\n    }).then(this._checkErrors);\n  }\n  /**\n   * adding a new card to the server\n   */\n  addCard({ name, link }) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link,\n      }),\n    }).then(this._checkErrors);\n  }\n  /**\n   * removing a card from the server\n   */\n  removeCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    }).then(this._checkErrors);\n  }\n  /**\n   * @description this method sends a fetch request adding or removing like depending on whether a card is liked or not\n   * @param {*} cardId is used to identify a card that is to changed\n   * @param {*} isLiked is used to identify whether a card is liked or not\n   */\n  changeLikeCardStatus(cardId, isLiked) {\n    if (isLiked) {\n      return fetch(`${this._url}/cards/likes/${cardId}`, {\n        method: 'DELETE',\n        headers: this._headers,\n      }).then(this._checkErrors);\n    } else {\n      return fetch(`${this._url}/cards/likes/${cardId}`, {\n        method: 'PUT',\n        headers: this._headers,\n      }).then(this._checkErrors);\n    }\n  }\n}\n\nconst api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-15',\n  headers: {\n    authorization: '1ed91742-56fd-4a56-812b-580db32d6be2',\n    'Content-Type': 'application/json',\n  },\n});\nexport default api;\n","export const BASE_URL = 'https://auth.nomoreparties.co';\n\nconst resCheck = (res) => res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n\nexport const signup = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ password, email }),\n  })\n    .then(resCheck);\n};\n\nexport const signin = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      password,\n      email\n    }),\n  })\n    .then(resCheck);\n}\n\nexport const getContent = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      \"Content-Type\": \"application/json\",\n      \"Authorization\" : `Bearer ${token}`\n    }\n  })\n    .then(resCheck);\n}","import React, { useState, useEffect } from 'react';\nimport Main from './Main.jsx';\nimport EditProfilePopup from './EditProfilePopup.jsx';\nimport AddPlacePopup from './AddPlacePopup.jsx';\nimport EditAvatarPopup from './EditAvatarPopup.jsx';\nimport ImagePopup from './ImagePopup.jsx';\nimport Login from './Login.jsx';\nimport Register from './Register.jsx';\nimport ProtectedRoute from './ProtectedRoute.jsx';\nimport api from '../utils/Api.js';\nimport * as auth from '../utils/auth.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport { Redirect, Route, Switch, useHistory } from 'react-router-dom';\n\nconst App = () => {\n  /**\n   * user states\n   */\n  const [currentUser, setCurrentUser] = useState({\n    name: '',\n    about: '',\n    avatar: '',\n  });\n\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [userData, setUserData] = useState({ email: '' });\n  /**\n   * profile editing\n   */\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [editSubmitButtonState, seteditSubmitButtonState] = useState('Сохранить');\n\n  const openEditProfileModal = () => {\n    setIsEditProfilePopupOpen(true);\n  };\n\n  const handleUpdateUser = (data) => {\n    seteditSubmitButtonState('Сохранение...');\n    api\n      .editProfile(data)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => console.error(err))\n      .finally(() => {\n        seteditSubmitButtonState('Сохранить');\n      });\n  };\n  /**\n   * cards\n   */\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [cards, setCards] = useState([]);\n  /**\n   * new card adding\n   */\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [addCardSubmitButtonState, setAddCardSubmitButtonState] = useState('Сохранить');\n\n  const openAddPlaceModal = () => {\n    setIsAddPlacePopupOpen(true);\n  };\n\n  const handleAddPlace = (data) => {\n    setAddCardSubmitButtonState('Сохранение...');\n    api\n      .addCard({\n        name: data.name,\n        link: data.link,\n      })\n      .then((res) => {\n        setCards([res, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => console.error(err))\n      .finally(() => {\n        setAddCardSubmitButtonState('Сохранить');\n      });\n  };\n\n  const handleCardLike = (card) => {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n    api\n      .changeLikeCardStatus(card._id, isLiked)\n      .then((newCard) => {\n        const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\n        setCards(newCards);\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const handleCardDelete = (card) => {\n    api\n      .removeCard(card._id)\n      .then(() => {\n        const newCards = cards.filter((item) => item._id !== card._id);\n        setCards(newCards);\n      })\n      .catch((err) => console.error(err));\n  };\n  /**\n   * avatar updating\n   */\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [avatarUpdateSubmitButtonState, setAvatarUpdateSubmitButtonState] = useState('Сохранить');\n\n  const openEditAvatarModal = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n\n  const handleUpdateAvatar = (url) => {\n    setAvatarUpdateSubmitButtonState('Сохранение...');\n    api\n      .updateAvatar(url)\n      .then((res) => {\n        setCurrentUser({ ...currentUser, avatar: res.avatar });\n        closeAllPopups();\n      })\n      .catch((err) => console.error(err))\n      .finally(() => {\n        setAvatarUpdateSubmitButtonState('Сохранить');\n      });\n  };\n\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n    setIsImagePopupOpen(true);\n  };\n\n  const closeAllPopups = () => {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsImagePopupOpen(false);\n  };\n  /**\n   * signup / login functionality\n   */\n  const history = useHistory();\n  const handleLogin = (email, password) => {\n    auth\n      .signin(email, password)\n      .then((res) => {\n        if (res.token) {\n          localStorage.setItem('jwt', res.token);\n          setUserData({\n            email,\n          });\n          setLoggedIn(true);\n          history.push('/feed');\n        }\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const [isSignupModalOpen, setIsSignupModalOpen] = useState(false);\n  const [signupResult, setSignupResult] = useState(false);\n\n  const closeSignupModal = () => {\n    if (signupResult) {\n      setIsSignupModalOpen(false);\n      history.push('/signin');\n    } else {\n      setIsSignupModalOpen(false);\n    }\n  };\n\n  const handleSignup = (email, password) => {\n    auth\n      .signup(email, password)\n      .then(() => {\n        setSignupResult(true);\n        setIsSignupModalOpen(true);\n      })\n      .catch((err) => {\n        setIsSignupModalOpen(true);\n        console.error(err);\n      });\n  };\n  /**\n   * checking jwt token when reloading page\n   */\n  const tokenCheck = () => {\n    const jwt = localStorage.getItem('jwt');\n    if (jwt) {\n      auth\n        .getContent(jwt)\n        .then((res) => {\n          if (res) {\n            setUserData({\n              email: res.email,\n            });\n            setLoggedIn(true);\n            history.push('/feed');\n          }\n        })\n        .catch((err) => console.error(err));\n    }\n  };\n\n  const handleSignOut = () => {\n    localStorage.removeItem('jwt');\n    setUserData({\n      email: '',\n    });\n    setLoggedIn(false);\n  };\n\n  useEffect(() => {\n    Promise.all([api.getProfileInfo(), api.getCards()])\n      .then((res) => {\n        const [userInfo, initialCards] = res;\n        setCurrentUser(userInfo);\n        setCards(initialCards);\n      })\n      .catch((err) => console.error(err));\n    tokenCheck();\n  }, []);\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <Switch>\n        <Route exact path='/signin'>\n          <Login handleLogin={handleLogin} />\n        </Route>\n\n        <Route exact path='/signup'>\n          <Register\n            handleSignup={handleSignup}\n            signupResult={signupResult}\n            isSignupModalOpen={isSignupModalOpen}\n            onClose={closeSignupModal}\n          />\n        </Route>\n\n        <ProtectedRoute\n          path='/feed'\n          component={Main}\n          loggedIn={loggedIn}\n          userData={userData}\n          onEditProfile={openEditProfileModal}\n          onAddPlace={openAddPlaceModal}\n          onEditAvatar={openEditAvatarModal}\n          onCardClick={handleCardClick}\n          cards={cards}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n          handleSignOut={handleSignOut}\n        />\n\n        <Route exact path='/'>\n          {loggedIn ? <Redirect to='/feed' /> : <Redirect to='/signin' />}\n        </Route>\n\n        <Route path='/*'>{loggedIn ? <Redirect to='/feed' /> : <Redirect to='/signin' />}</Route>\n      </Switch>\n\n      <EditProfilePopup\n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}\n        onUpdateUser={handleUpdateUser}\n        submitButtonState={editSubmitButtonState}\n      />\n      <AddPlacePopup\n        isOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopups}\n        onAddPlace={handleAddPlace}\n        submitButtonState={addCardSubmitButtonState}\n      />\n\n      <EditAvatarPopup\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}\n        onUpdateAvatar={handleUpdateAvatar}\n        submitButtonState={avatarUpdateSubmitButtonState}\n      />\n      <ImagePopup\n        name='pic-modal'\n        isOpen={isImagePopupOpen}\n        onClose={closeAllPopups}\n        card={selectedCard}\n      />\n    </CurrentUserContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.querySelector('#root')\n);"],"sourceRoot":""}